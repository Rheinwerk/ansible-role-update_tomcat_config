---

- name: Include logrotate if exists
  ansible.builtin.include_tasks: "{{ item }}"
  with_first_found:
    - files:
        - "../../../includes/logrotate.yml"
      skip: true
  vars:
    logrotate_config:
      name: "tomcat"
      entries:
        - { dir_pattern: "{{ _tomcat.log_dir }}", file_pattern: "catalina.out" }
        - { dir_pattern: "{{ _tomcat.log_dir }}", file_pattern: "*.log" }

- name: Create webapps dir
  ansible.builtin.file:
    path: "{{ _tomcat.install_dir }}/webapps"
    state: directory
    owner: "{{ _tomcat.user }}"
    group: "{{ _tomcat.group }}"
    mode: 0755

- name: Create temp dir
  ansible.builtin.file:
    path: "{{ _tomcat.tmp_dir }}"
    state: directory
    owner: "{{ _tomcat.user }}"
    group: "{{ _tomcat.group }}"
    mode: 0750

- name: Create log dir
  ansible.builtin.file:
    path: "{{ _tomcat.log_dir }}"
    state: directory
    owner: "{{ _tomcat.user }}"
    group: "{{ _tomcat.group }}"
    mode: 0750

- name: Create server.xml
  ansible.builtin.template:
    src: "tomcat/conf/server.xml.j2"
    dest: "{{ _tomcat.install_dir }}/conf/server.xml"
    owner: root
    group: "{{ _tomcat.group }}"
    mode: 0640

- name: Create logging.properties
  ansible.builtin.template:
    src: "tomcat/conf/logging.properties.j2"
    dest: "{{ _tomcat.install_dir }}/conf/logging.properties"
    owner: root
    group: "{{ _tomcat.group }}"
    mode: 0640

- name: Create tomcat-users.xml
  ansible.builtin.template:
    src: "tomcat/conf/tomcat-users.xml.j2"
    dest: "{{ _tomcat.install_dir }}/conf/tomcat-users.xml"
    owner: root
    group: "{{ _tomcat.group }}"
    mode: 0640

- name: Create tomcat systemd dir
  ansible.builtin.file:
    path: "/etc/systemd/system/tomcat.service.d"
    state: directory
    owner: root
    group: "{{ _tomcat.group }}"
    mode: 0640

- name: Create tomcat systemd environment files
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    mode: 0640
    owner: root
    group: "{{ _tomcat.group }}"
  with_items:
    - "etc/systemd/system/tomcat.service.d/10-environment.conf"

- name: Create tomcat systemd helper script
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    mode: 0750
    owner: root
    group: "{{ _tomcat.group }}"
  with_items:
    - usr/local/sbin/tomcat-pre-start.sh
    - usr/local/sbin/tomcat-post-stop.sh
    - usr/local/sbin/tomcat-drain.sh

- name: Create tomcat healthcheck consul helper script
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - "usr/local/bin/tomcat-healthcheck.sh"

- name: Create tomcat systemd drain drop-in
  vars:
    required_services:
      - haproxy.service
      - mongos.service
      - docker.service
      - consul-client.service
      - dnsmasq.service
      - systemd-resolved.service
      - dbus.service # consul health checks use `systemctl` which requires `dbus` to be running
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - "etc/systemd/system/tomcat.service.d/20-tomcat-drain.conf"

- name: Create directories
  ansible.builtin.file:
    name: "{{ item.name }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - { name: "/etc/ansible/playbooks",  owner: "root", group: "root", mode: "0755" }

- name: Install draining playbook
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "etc/ansible/playbooks/tomcat-drain.yml"

- name: Setup tomcat service
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - "tomcat.service"

- name: Create curl credentials file for jmx monitoring
  ansible.builtin.template:
    src: tomcat/curl-jmx-creds.j2
    dest: "{{ _tomcat.install_dir }}/curl-jmx-creds"
    mode: 0600
    owner: root
    group: root
